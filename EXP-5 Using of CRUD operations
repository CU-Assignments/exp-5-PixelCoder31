import java.sql.*;
import java.util.Scanner;

public class ProductCRUD {

    private static final String URL = "jdbc:mysql://localhost:3306/your_database_name"; 
    private static final String USER = "your_username"; 
    private static final String PASSWORD = "your_password";
    private static Connection getConnection() throws SQLException {
        return DriverManager.getConnection(URL, USER, PASSWORD);
    }

    public static void createProduct() {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter Product Name:");
        String productName = sc.nextLine();
        System.out.println("Enter Product Price:");
        double price = sc.nextDouble();
        System.out.println("Enter Product Quantity:");
        int quantity = sc.nextInt();

        String query = "INSERT INTO Product (ProductName, Price, Quantity) VALUES (?, ?, ?)";

        try (Connection conn = getConnection(); PreparedStatement stmt = conn.prepareStatement(query)) {
            conn.setAutoCommit(false); 

            stmt.setString(1, productName);
            stmt.setDouble(2, price);
            stmt.setInt(3, quantity);

            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                conn.commit();
                System.out.println("Product created successfully.");
            } else {
                conn.rollback(); 
                System.out.println("Failed to create product.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static void readProduct() {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter Product ID to view:");
        int productId = sc.nextInt();

        String query = "SELECT * FROM Product WHERE ProductID = ?";

        try (Connection conn = getConnection(); PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setInt(1, productId);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                System.out.println("ProductID: " + rs.getInt("ProductID"));
                System.out.println("ProductName: " + rs.getString("ProductName"));
                System.out.println("Price: " + rs.getDouble("Price"));
                System.out.println("Quantity: " + rs.getInt("Quantity"));
            } else {
                System.out.println("Product not found.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static void updateProduct() {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter Product ID to update:");
        int productId = sc.nextInt();
        System.out.println("Enter new Product Name:");
        sc.nextLine(); 
        String productName = sc.nextLine();
        System.out.println("Enter new Product Price:");
        double price = sc.nextDouble();
        System.out.println("Enter new Product Quantity:");
        int quantity = sc.nextInt();

        String query = "UPDATE Product SET ProductName = ?, Price = ?, Quantity = ? WHERE ProductID = ?";

        try (Connection conn = getConnection(); PreparedStatement stmt = conn.prepareStatement(query)) {
            conn.setAutoCommit(false); 

            stmt.setString(1, productName);
            stmt.setDouble(2, price);
            stmt.setInt(3, quantity);
            stmt.setInt(4, productId);

            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                conn.commit(); 
                System.out.println("Product updated successfully.");
            } else {
                conn.rollback();
                System.out.println("Failed to update product.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static void deleteProduct() {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter Product ID to delete:");
        int productId = sc.nextInt();

        String query = "DELETE FROM Product WHERE ProductID = ?";

        try (Connection conn = getConnection(); PreparedStatement stmt = conn.prepareStatement(query)) {
            conn.setAutoCommit(false);
            stmt.setInt(1, productId);

            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                conn.commit(); 
                System.out.println("Product deleted successfully.");
            } else {
                conn.rollback(); 
                System.out.println("Failed to delete product.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static void displayMenu() {
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println("\nMenu:");
            System.out.println("1. Create Product");
            System.out.println("2. Read Product");
            System.out.println("3. Update Product");
            System.out.println("4. Delete Product");
            System.out.println("5. Exit");

            System.out.print("Enter your choice: ");
            int choice = sc.nextInt();

            switch (choice) {
                case 1:
                    createProduct();
                    break;
                case 2:
                    readProduct();
                    break;
                case 3:
                    updateProduct();
                    break;
                case 4:
                    deleteProduct();
                    break;
                case 5:
                    System.out.println("Exiting...");
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    public static void main(String[] args) {
        displayMenu();
    }
}
